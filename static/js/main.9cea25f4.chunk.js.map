{"version":3,"sources":["components/FormContact/FormContact.module.css","components/FormContact/FormContact.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","FormContact","state","name","number","handelChange","event","currentTarget","value","setState","handelSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","label","type","pattern","title","required","onChange","input","btn","Component","ContactsList","contacts","delContact","list","map","id","onClick","Filter","onChangeFilter","App","filter","FormSubmitHandler","contact","v4","find","toUpperCase","alert","FilterContacts","e","SearchContacts","includes","onDelBtnChange","prevState","localStorage","getItem","parseCont","JSON","parse","preVProps","console","log","setItem","stringify","normalizeContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cea25f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContact_form__1RTBB\",\"label\":\"FormContact_label__19Bf-\",\"input\":\"FormContact_input__z5Dz1\",\"btn\":\"FormContact_btn__2xdrb\"};","import { Component } from 'react';\r\nimport s from './FormContact.module.css';\r\n\r\nclass FormContact extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handelChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handelSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handelSubmit} className={s.form}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handelChange}\r\n            className={s.input}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handelChange}\r\n            className={s.input}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.btn}>\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormContact;\r\n","import s from './ContactsList.module.css';\r\n\r\nconst ContactsList = ({ contacts, delContact }) => {\r\n  return (\r\n    <>\r\n      <ul className={s.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li key={id}>\r\n            <span>\r\n              <b>{name}</b>: {number}\r\n            </span>\r\n\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => delContact(id)}\r\n              className={s.btn}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contact by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChangeFilter}\r\n        className={s.input}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport { v4 } from 'uuid';\nimport 'modern-normalize';\nimport './App.css';\n\nimport FormContact from './components/FormContact';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts')\n    const parseCont = JSON.parse(contacts);\n\n    if (parseCont) {\n      this.setState({ contacts: parseCont })\n    }\n    \n  }\n\n  componentDidUpdate(preVProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      console.log(\"Обновилось контакт\");\n\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  FormSubmitHandler = ({ name, number }) => {\n    const contact = {\n      id: v4(),\n      name: name,\n      number: number,\n    };\n\n    const { contacts } = this.state;\n\n    if (\n      contacts.find(\n        ({ name }) => name.toUpperCase() === contact.name.toUpperCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n    }\n    // else if (\n    //   contacts.find(\n    //     ({ number }) => number.toUpperCase() === contact.number.toUpperCase(),\n    //   )) {\n    //   alert(`${number} is already in contacts`);\n    // }\n    else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n\n  FilterContacts = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  SearchContacts = () => {\n    this.state.contacts.filter(contact =>\n      contact.name.toUpperCase().includes(this.state.filter.toUpperCase()),\n    );\n  };\n\n  onDelBtnChange = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { FilterContacts, FormSubmitHandler, onDelBtnChange } = this;\n    const { contacts, filter } = this.state;\n    const normalizeContact = contacts.filter(contact =>\n      contact.name.toUpperCase().includes(filter.toUpperCase()),\n    );\n    return (\n      <>\n        <div className=\"App\">\n          <h2>Phonebook</h2>\n          <FormContact onSubmit={FormSubmitHandler} />\n          <h2>Contacts</h2>\n          <Filter value={filter} onChangeFilter={FilterContacts} />\n          <ContactsList\n            contacts={normalizeContact}\n            delContact={onDelBtnChange}\n          />\n        </div>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__3U3Xp\",\"btn\":\"ContactsList_btn__2LNhy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__Pkq8p\",\"input\":\"Filter_input__FKTHs\"};"],"sourceRoot":""}